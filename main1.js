// Задание 1

let a = 1, b = 1, c, d;


// Переменная с хранит 2 потому что '++' - это унарный оператор, который прибавляет единицу к переменной при возвращении значения, если стоит перед переменной.

c = ++a;
console.log(c);


// Переменная с хранит 1 потому что, в данном случае оператор '++' стоит после переменной и сначала при возвращении вернется значение переменной, а после он прибавит 1.

d = b++;
console.log(d);

/*
В данном выражении есть два решения:
1. Если не скрывать комментарием первое выражение то переменная 'с' будет хранить 5, так как в первом выражении мы задали переменную 'а' как 2,
соответственно в данном примере к переменной 'а' еще прибавляется 1, переменной 'а' присвоится 3, 2 + 3 = 5.

2. Если скрыть первое выражение то переменная 'с' будет хранить 4, так как в данном примере JS видит 'а' = 1,
при выполнении оператора '++' прибавляет еще 1-цу итого получаем 'а' = 2, 2 + 2 = 4.
*/
c = 2 + ++a;
console.log(c);

/*
В данном случае таже ситуация что и выше:
1. Если не скрывать комментарием первое выражение то переменная 'd' будет хранить 4 потому что, после второго выражения у переменной 'b' осталось значение 1,
но так как у 'b' есть оператор '++', который прибавляет 1-цу после возвращения значения переменной,
то получается что при выполнении данного выражения в переменную 'b' присваивается уже 2, а 2 + 2 = 4.

2. Если скрыть первое выражение то переменная 'd' будет хранить 3, так как переменная 'b' вернется 1-цой, а 2 + 1 = 3.
*/
d = 2 + b++;
console.log(d);

// Выведет в консоль 'a' = 3, так как изначально 'a' = 1, и мы использовали 2 раза оператор '++'
console.log(a);

// Выведет в консоль 'b' = 3, так как изначально 'b' = 1, и мы использовали 2 раза оператор '++'
console.log(b);

// Задание 2

let a = 2;
let x = 1 + (a *= 2);

/*Переменная х хранит 5, так как данное выражение (a *= 2) умножает переменную а(2) на 2.
В свою очередь переменная а при выводе в консоль хранит в себе 4, так как в том же выражении (a *= 2),
выполняется присвоение с умножением.*/

console.log(x);
console.log(a);

// Задание 3

/*Необходимо попросить пользователя ввести два числа в переменные a и b.
Необходимо вывести в консоль один результат из следующих проверок:
1. Если оба числа в переменных a и b положительные, вывести разность
чисел a и b, а именно, вычесть из переменной a значение переменной b.
2. Если оба числа в переменных a и b отрицательные, вывести произведение
чисел a и b.
3. Если числа в переменных a и b разных знаков, вывести сумму чисел
a и b.
В остальных случаях программа не должна ничего выводить.*/

const a = Number(prompt('Введите первое число'))
const b = Number(prompt('Введите второе число'))

if (a && b >= 1) {
    const diff = (a - b);
    console.log(diff);
} else if (a && b <= -1) {
    const mult = (a * b);
    console.log(-mult);
} else if (a <= -1 && b >= 1) {
    const sum = (a + b);
    console.log(sum);
} else if (a >= 1 && b <= -1) {
    const sum = (a + b);
    console.log(sum);
}

// Задание 4

/*Необходимо реализовать четыре функции, каждая функция должна принимать по два
числа и выполнять одну из операций(каждая функция выполняет одну из них):
1. Сложение
2. Разность
3. Умножение
4. Деление

Необходимо сделать так, чтобы функция вернула число, например выражение
console.log(sum(2, 6)); должно вывести число 8 в консоль(sum - функция
сложения в данном примере, ваши названия функций могут отличаться).

Округлять значения, которые возвращают функции не нужно, однако, обратите
внимание на разность, функция должна вычесть из большего числа меньшее, либо
вернуть 0, если числа равны.

Функциям всегда передаются корректные числа, проверки на NaN, Infinity делать
не нужно.*/

const a = Number(prompt('Введите первое число'))
const b = Number(prompt('Введите второе число'))

// 1. Сложение

function sum(a, b) {
    return a + b;
}
console.log(sum(a, b))

// 2. Разность

const diff = (a, b) => {
    if (a <= 0) {
        return a - b;
    } else {
        return b - a;
    }
}
console.log(diff(a, b));

// 3. Умножение

const sum = (a, b) => a * b;
console.log(sum(a, b));

// 4. Деление

const div = (a, b) => {
    if (a <= 0) {
        return a / b;
    } else {
        return b / a;
    }
}
console.log(div(a, b));